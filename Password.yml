- name: Retrieve User Password Information
  hosts: localhost
  gather_facts: no
  vars:
    tenant_id: "195e8969-c853-47b4-83d0-36e044d83923"
    client_id: "e2e46ae3-2dee-4eed-a074-ddffd760ab2b"
    client_secret: "PQZ8Q~XSmMsU4dbgk2KyWMHK1h8X7ciD~H.1_csi"
    graph_api_endpoint: "https://graph.microsoft.com/v1.0"
    domain: "amitomar63gmail.onmicrosoft.com"
  
  tasks:
    - name: Set Payload Variables
      set_fact:
        # Ensure clean username formatting
        clean_username: "{{ awx_webhook_payload.username | regex_replace('@.*$', '') }}"
        user_principal_name: "{{ awx_webhook_payload.username | regex_replace('^.*@', '') | default(domain) }}"

    - name: Construct Full User Principal Name
      set_fact:
        full_upn: "{{ clean_username }}@{{ user_principal_name }}"

    - name: Get Azure access token
      uri:
        url: "https://login.microsoftonline.com/{{ tenant_id }}/oauth2/v2.0/token"
        method: POST
        body:
          client_id: "{{ client_id }}"
          client_secret: "{{ client_secret }}"
          scope: "https://graph.microsoft.com/.default"
          grant_type: "client_credentials"
        body_format: form-urlencoded
        return_content: yes
      register: azure_auth_response

    - name: Set Azure token
      set_fact:
        access_token: "{{ azure_auth_response.json.access_token }}"

    - name: Verify User Existence
      uri:
        url: "{{ graph_api_endpoint }}/users/{{ full_upn }}"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        status_code: [200, 404]
      register: user_verify
      ignore_errors: yes

    - name: Reset User Password
      uri:
        url: "{{ graph_api_endpoint }}/users/{{ full_upn }}/passwordPolicies"
        method: PATCH
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        body: 
          passwordPolicies: "DisablePasswordExpiration,DisableStrongPassword"
        body_format: json
      when: user_verify.status == 200

    - name: Generate Temporary Password
      set_fact:
        temp_password: "Temp_{{ lookup('password', '/dev/null chars=ascii_letters,digits length=12') }}"

    - name: Perform Password Reset
      uri:
        url: "{{ graph_api_endpoint }}/users/{{ full_upn }}"
        method: PATCH
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        body: 
          passwordProfile:
            forceChangePasswordNextSignIn: true
            password: "{{ temp_password }}"
        body_format: json
      register: password_reset_result
      when: user_verify.status == 200

    - name: Debug Password Reset
      debug:
        msg: 
          - "Full User Principal Name: {{ full_upn }}"
          - "Password Reset Status: {{ password_reset_result.status | default('Skipped') }}"
          - "Temporary Password: {{ temp_password | default('N/A') }}"
          - "User Verification Status: {{ user_verify.status }}"
