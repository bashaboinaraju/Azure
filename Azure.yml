---
- name: Fetch Pending ServiceNow Requests
  hosts: localhost
  gather_facts: no
  vars:
    servicenow_instance: "https://dev247928.service-now.com"
    servicenow_username: "admin"
    servicenow_password: "%ml4Vs9RXE/s"
    tenant_id: "195e8969-c853-47b4-83d0-36e044d83923"
    client_id: "e2e46ae3-2dee-4eed-a074-ddffd760ab2b"
    client_secret: "PQZ8Q~XSmMsU4dbgk2KyWMHK1h8X7ciD~H.1_csi"
    graph_api_endpoint: "https://graph.microsoft.com/v1.0"
    domain: "amitomar63gmail.onmicrosoft.com"
 
  tasks:
    - name: Print Complete Webhook Payload
      debug:
        var: awx_webhook_payload

    - name: Set Payload Variables
      set_fact:
        default_user_name: "{{ awx_webhook_payload.displayName | default('') }}"
        default_mail_nickname: "{{ awx_webhook_payload.mailNickname | default('') }}"
        default_group_name: "{{ awx_webhook_payload.group | default('') }}"
        default_role_name: "{{ awx_webhook_payload.role | default('') }}"

    - name: Debug Parsed Variables
      debug:
        msg:
          - "Display Name: {{ default_user_name }}"
          - "Mail Nickname: {{ default_mail_nickname }}"
          - "Group Name: {{ default_group_name }}"
          - "Role Name: {{ default_role_name }}"

    - name: Parse Display Name into First and Last Name
      set_fact:
        first_name: "{{ default_user_name.split(' ')[0] }}"
        last_name: "{{ default_user_name.split(' ')[1:] | join(' ') }}"
      when: default_user_name is defined and ' ' in default_user_name

    - name: Get Azure access token
      uri:
        url: "https://login.microsoftonline.com/{{ tenant_id }}/oauth2/v2.0/token"
        method: POST
        body:
          client_id: "{{ client_id }}"
          client_secret: "{{ client_secret }}"
          scope: "https://graph.microsoft.com/.default"
          grant_type: "client_credentials"
        body_format: form-urlencoded
        return_content: yes
      register: azure_auth_response
 
    - name: Set Azure token
      set_fact:
        access_token: "{{ azure_auth_response.json.access_token }}"

    - name: Check if user exists in Azure AD
      uri:
        url: "{{ graph_api_endpoint }}/users/{{ default_mail_nickname }}@{{ domain }}"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        status_code: [200, 404]
        return_content: yes
      register: user_check
      ignore_errors: yes
 
    - name: Create User in Azure AD if Not Exists
      uri:
        url: "{{ graph_api_endpoint }}/users"
        method: POST
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        body:
          accountEnabled: true
          displayName: "{{ default_user_name }}"
          givenName: "{{ first_name | default(default_user_name) }}"
          surname: "{{ last_name | default('') }}"
          mailNickname: "{{ default_mail_nickname }}"
          userPrincipalName: "{{ default_mail_nickname }}@{{ domain }}"
          passwordProfile:
            forceChangePasswordNextSignIn: true
            password: "Default@1234"
        body_format: json
        status_code: [201]
      register: user_creation
      when: user_check.status == 404

    - name: Group Lookup and Assignment
      block:
        - name: Get Group ID by Name
          uri:
            url: "{{ graph_api_endpoint }}/groups?$filter=displayName eq '{{ default_group_name }}'"
            method: GET
            headers:
              Authorization: "Bearer {{ access_token }}"
              Content-Type: "application/json"
            return_content: yes
          register: group_lookup
          when: default_group_name is defined and default_group_name != ''

        - name: Debug Group Lookup
          debug:
            var: group_lookup
          when: group_lookup is defined

        - name: Add User to Group
          uri:
            url: "{{ graph_api_endpoint }}/groups/{{ group_lookup.json.value[0].id }}/members/$ref"
            method: POST
            headers:
              Authorization: "Bearer {{ access_token }}"
              Content-Type: "application/json"
            body:
              "@odata.id": "{{ graph_api_endpoint }}/directoryObjects/{{ user_creation.json.id }}"
            body_format: json
            status_code: [204]
          when: 
            - user_creation is defined
            - user_creation.status == 201
            - group_lookup is defined
            - group_lookup.json is defined
            - group_lookup.json.value | length > 0
          register: group_add_result

        - name: Debug Group Add Result
          debug:
            var: group_add_result
          when: group_add_result is defined

      rescue:
        - name: Group Lookup Failure
          debug:
            msg: "Failed to lookup or add to group: {{ default_group_name }}"

    - name: Role Lookup and Assignment
      block:
        - name: Get Directory Role by Name
          uri:
            url: "{{ graph_api_endpoint }}/directoryRoles?$filter=displayName eq '{{ default_role_name }}'"
            method: GET
            headers:
              Authorization: "Bearer {{ access_token }}"
              Content-Type: "application/json"
            return_content: yes
          register: role_lookup
          when: default_role_name is defined and default_role_name != ''

        - name: Debug Role Lookup
          debug:
            var: role_lookup
          when: role_lookup is defined

        - name: Assign Directory Role to User
          uri:
            url: "{{ graph_api_endpoint }}/directoryRoles/{{ role_lookup.json.value[0].id }}/members/$ref"
            method: POST
            headers:
              Authorization: "Bearer {{ access_token }}"
              Content-Type: "application/json"
            body:
              "@odata.id": "{{ graph_api_endpoint }}/directoryObjects/{{ user_creation.json.id }}"
            body_format: json
            status_code: [204]
          when: 
            - user_creation is defined
            - user_creation.status == 201
            - role_lookup is defined
            - role_lookup.json is defined
            - role_lookup.json.value | length > 0
          register: role_assign_result

        - name: Debug Role Assign Result
          debug:
            var: role_assign_result
          when: role_assign_result is defined

      rescue:
        - name: Role Lookup Failure
          debug:
            msg: "Failed to lookup or assign role: {{ default_role_name }}"

    - name: Final Debug Information
      debug:
        msg:
          - "First Name: {{ first_name | default('Not Set') }}"
          - "Last Name: {{ last_name | default('Not Set') }}"
          - "Group: {{ default_group_name | default('No Group Specified') }}"
          - "Role: {{ default_role_name | default('No Role Specified') }}"
